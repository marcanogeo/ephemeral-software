---
/*const refs = [
    { href: '/', label: 'Home' },
    { href: '/about', label: 'About' },
    { href: '/services', label: 'Services' },
    { href: '/blog', label: 'Blog' },
    { href: '/contact', label: 'Contact' }, // ✅ Página informativa
];
*/
const refs = [
    { href: '/', label: 'Home' },
    { href: '/about', label: 'About' },
    { href: '/services', label: 'Services' },
    { href: '/contact', label: 'Contact' }, // ✅ Página informativa
    { href: '/form', label: 'Get in Touch' } // ✅ Nueva página de formulario de contacto
];

// ✅ Mapeo correcto sin barras finales innecesarias
const items = refs.map(ref => ({
    href: ref.href,
    label: ref.label,
}));

// Obtener la URL actual para highlight de página activa
const currentPath = Astro.url.pathname;
---

<!-- Desktop Navigation -->
<nav role="navigation" aria-label="Main navigation" class="navigation-container">
    <!-- Desktop Links -->
    <div class="desktop-nav">
        {items.map(item => {
            const isActive = currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href));
            return (
                <a 
                    href={item.href} 
                    class={`nav-link ${isActive ? 'nav-link--active' : ''}`}
                    aria-current={isActive ? 'page' : undefined}
                >
                    {item.label}
                </a>
            );
        })}
    </div>

    <!-- Mobile Navigation -->
    <div class="mobile-nav">
        <button 
            id="mobile-toggle"
            class="mobile-toggle"
            aria-label="Toggle mobile menu"
            aria-expanded="false"
            aria-controls="mobile-menu"
        >
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
        </button>
        
        <!-- Mobile Menu (Simple Dropdown) -->
        <div id="mobile-menu" class="mobile-menu" role="menu">
            {items.map(item => {
                const isActive = currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href));
                return (
                    <a 
                        href={item.href} 
                        class={`mobile-link ${isActive ? 'mobile-link--active' : ''}`}
                        role="menuitem"
                        aria-current={isActive ? 'page' : undefined}
                    >
                        {item.label}
                    </a>
                );
            })}
        </div>
    </div>
</nav>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const mobileToggle = document.getElementById('mobile-toggle');
        const mobileMenu = document.getElementById('mobile-menu');
        let isOpen = false;
        
        function toggleMenu() {
            isOpen = !isOpen;
            
            if (mobileToggle && mobileMenu) {
                // Update ARIA state
                mobileToggle.setAttribute('aria-expanded', isOpen.toString());
                
                // Toggle classes
                mobileToggle.classList.toggle('mobile-toggle--open', isOpen);
                mobileMenu.classList.toggle('mobile-menu--open', isOpen);
            }
        }
        
        // Toggle on button click
        mobileToggle?.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            toggleMenu();
        });
        
        // Close menu when clicking on a link
        mobileMenu?.addEventListener('click', (event) => {
            const target = event.target as HTMLElement;
            if (target.classList.contains('mobile-link')) {
                toggleMenu();
            }
        });
        
        // Close menu when clicking outside
        document.addEventListener('click', (event) => {
            const target = event.target as HTMLElement;
            if (isOpen && 
                !mobileToggle?.contains(target) && 
                !mobileMenu?.contains(target)) {
                toggleMenu();
            }
        });
        
        // Handle escape key
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && isOpen) {
                toggleMenu();
                mobileToggle?.focus();
            }
        });
        
        // Auto-close on desktop resize
        window.addEventListener('resize', () => {
            if (window.innerWidth >= 768 && isOpen) {
                toggleMenu();
            }
        });
    });
</script>

<style>
    /* === NAVIGATION CONTAINER === */
    .navigation-container {
        position: relative;
        display: flex;
        align-items: center;
        width: 100%;
    }
    
    /* === DESKTOP NAVIGATION === */
    .desktop-nav {
        display: none;
        align-items: center;
        gap: 2rem;
    }
    
    @media (min-width: 768px) {
        .desktop-nav {
            display: flex;
        }
    }
    
    .nav-link {
        color: #374151;
        text-decoration: none;
        font-weight: 500;
        padding: 0.5rem 0.75rem;
        border-radius: 0.375rem;
        transition: all 0.2s ease;
        position: relative;
    }
    
    .nav-link:hover {
        color: #3b82f6;
        background-color: rgba(59, 130, 246, 0.05);
    }
    
    .nav-link--active {
        color: #3b82f6;
        font-weight: 600;
    }
    
    .nav-link--active::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 50%;
        transform: translateX(-50%);
        width: 20px;
        height: 2px;
        background-color: #3b82f6;
        border-radius: 1px;
    }
    
    /* === MOBILE NAVIGATION === */
    .mobile-nav {
        display: block;
        position: relative;
        width: 100%;
    }
    
    @media (min-width: 768px) {
        .mobile-nav {
            display: none;
        }
        .navigation-container{
            width: auto;
        }
    }
    
    /* === MOBILE TOGGLE BUTTON === */
    .mobile-toggle {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 40px;
        height: 40px;
        background: none;
        border: none;
        cursor: pointer;
        padding: 8px;
        border-radius: 0.375rem;
        transition: background-color 0.2s ease;
        margin-left: auto;
    }
    
    .mobile-toggle:hover {
        background-color: rgba(59, 130, 246, 0.05);
    }
    
    .mobile-toggle:focus {
        outline: none;
        box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
    }
    
    /* === HAMBURGER LINES === */
    .hamburger-line {
        display: block;
        width: 20px;
        height: 2px;
        background-color: #374151;
        margin: 2px 0;
        transition: all 0.3s ease;
        border-radius: 1px;
    }
    
    .mobile-toggle--open .hamburger-line:nth-child(1) {
        transform: rotate(45deg) translate(5px, 5px);
    }
    
    .mobile-toggle--open .hamburger-line:nth-child(2) {
        opacity: 0;
    }
    
    .mobile-toggle--open .hamburger-line:nth-child(3) {
        transform: rotate(-45deg) translate(7px, -6px);
    }
    
    /* === MOBILE MENU === */
    .mobile-menu {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        margin-top: 0.5rem;
        padding: 0.5rem;
        max-height: 0;
        overflow: hidden;
        opacity: 0;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        z-index: 50;
    }
    
    .mobile-menu--open {
        max-height: 300px;
        opacity: 1;
        transform: translateY(0);
    }
    
    /* === MOBILE LINKS === */
    .mobile-link {
        display: block;
        color: #374151;
        text-decoration: none;
        font-weight: 500;
        padding: 0.75rem 1rem;
        border-radius: 0.375rem;
        transition: all 0.2s ease;
        border-left: 3px solid transparent;
    }
    
    .mobile-link:hover {
        color: #3b82f6;
        background-color: rgba(59, 130, 246, 0.05);
        border-left-color: #3b82f6;
        transform: translateX(4px);
    }
    
    .mobile-link--active {
        color: #3b82f6;
        background-color: rgba(59, 130, 246, 0.1);
        border-left-color: #3b82f6;
        font-weight: 600;
    }
    
    /* === ACCESSIBILITY === */
    @media (prefers-reduced-motion: reduce) {
        .nav-link,
        .mobile-link,
        .mobile-menu,
        .hamburger-line {
            transition: none;
        }
    }
    
    @media (prefers-contrast: high) {
        .mobile-menu {
            border-width: 2px;
            border-color: #000;
        }
        
        .mobile-toggle:focus {
            box-shadow: 0 0 0 3px #000;
        }
    }
    
    /* === RESPONSIVE ADJUSTMENTS === */
    @media (max-width: 480px) {
        .mobile-menu {
            left: -0.5rem;
            right: -0.5rem;
        }
    }
</style>